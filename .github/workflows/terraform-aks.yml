name: Deploy AKS Cluster with Terraform

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    permissions:
      id-token: write
      contents: read

    steps:
      # Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Login to Azure using service principal credentials
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Terraform Plan
      - name: Terraform Plan
        env:
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: terraform plan -out=tfplan

      # Terraform Apply
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        env:
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: terraform apply -auto-approve tfplan

      # Export kubeconfig (using admin config)
      # ⚠️ Make sure your Terraform output uses:
      # output "kube_config" { value = azurerm_kubernetes_cluster.aks.kube_admin_config_raw }
      - name: Get kubeconfig
        run: |
          mkdir -p ~/.kube
          terraform output -raw kube_config > ~/.kube/config
          chmod 600 ~/.kube/config
          echo "✅ Kubeconfig file generated"

      # Install kubectl CLI
      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: latest

      # Verify AKS connection
      - name: Verify Cluster Connection
        run: kubectl get nodes

      # Deploy application manifests
      - name: Deploy Application
        run: |
          echo "🚀 Deploying to AKS..."
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          echo "✅ Deployment applied successfully"
          kubectl get svc
