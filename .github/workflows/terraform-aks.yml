name: Deploy AKS Cluster with Terraform

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        env:
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        env:
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: terraform apply -auto-approve tfplan

      - name: Debug kubeconfig output
        run: |
          echo "------ kubeconfig preview (first 10 lines) ------"
          terraform output -raw kube_config | head -n 10 || true

      - name: Get kubeconfig
        run: |
          mkdir -p ~/.kube
          # Extract Terraform kubeconfig output
          terraform output -raw kube_config > kube_raw.txt
          
          # Detect JSON vs YAML
          if head -n 1 kube_raw.txt | grep '^\['; then
            echo "Detected JSON array kubeconfig. Extracting..."
            cat kube_raw.txt | jq -r '.[0].value // .[0]' > ~/.kube/config
          else
            echo "Detected YAML kubeconfig."
            mv kube_raw.txt ~/.kube/config
          fi

          chmod 600 ~/.kube/config
          echo "âœ… kubeconfig written to ~/.kube/config"

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Verify Cluster Connection
        run: kubectl get nodes

      - name: Deploy App to AKS
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl get svc
